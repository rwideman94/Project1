@model Project1.UI.ViewModels.TDWithdrawlVM

<h1>Withdraw</h1>
@if (!Model.Withdrawn)
{
    <b><span asp-validation-for="Withdrawn" class="text-danger"></span></b>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Withdraw">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group form-check">
                    <input class="form-check-input" asp-for="Withdrawn" hidden />
                    <br />
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="WithdrawlToAccount" /> @Html.DisplayNameFor(model => model.WithdrawlToAccount)
                    </label>
                </div>
                <div>
                    Your accounts:
                    <ul>
                        @foreach (var item in Model.Accounts)
                        {
                            if (!item.IsClosed)
                            {
                                <li>
                                    @item.AccountType account #@item.Id: @item.NickName
                                </li>
                            }
                        }
                    </ul>
                </div>
                <label asp-for="AccountID" class="control-label"></label>
                @Html.DropDownListFor(m => m.AccountID,
     new SelectList(Model.Accounts, "Id", "Id"), "Select account to transfer funds to")
                <div class="form-group">
                    <input type="submit" value="Withdraw" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}
else
{
    <h3>That term deposit has already been withdrawn.</h3>
    <hr />
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}